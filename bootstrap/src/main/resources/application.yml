server:
  port: 8081
spring:
  application:
    name: resource-service
  profiles:
    default: dev
  config:
    import: optional:configserver:http://${CONFIG_SERVER_HOSTNAME}:8090/
  data:
    jpa:
      repositories:
        enabled: true
  datasource:
    url: jdbc:postgresql://${DB_HOSTNAME}:5432/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    packages-to-scan: dev.amir.resourceservice.framework.output.sql.entity
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          time_zone: UTC
        dialect: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
  sql:
    init:
      mode: always
  retry:
    max-attempts: 3
    initial-interval: 1000
    multiplier: 2
    max-interval: 30000
  rabbitmq:
    host: ${RABBITMQ_HOSTNAME}
    port: 5672
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}
    queues:
      resource-process: q.resource-process
cloud:
  aws:
    stack:
      auto: false
    credentials:
      instanceProfile: false
      accessKey: ${AWS_ACCESS_KEY}
      secretKey: ${AWS_SECRET_KEY}
    region:
      static: ${AWS_DEFAULT_REGION}
services:
  aws:
    s3:
      url: ${AWS_S3_DOMAIN}
  storage-service:
    url: http://${STORAGE_SERVICE_DOMAIN}
    type:
      temporal: STAGING
      permanent: PERMANENT
